// Generated by view binder compiler. Do not edit!
package com.trovaparco.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.trovaparco.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFavoriteParksBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnBackToMap;

  @NonNull
  public final RecyclerView recyclerFavoriteParks;

  @NonNull
  public final TextView tvFavoritesTitle;

  private FragmentFavoriteParksBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnBackToMap, @NonNull RecyclerView recyclerFavoriteParks,
      @NonNull TextView tvFavoritesTitle) {
    this.rootView = rootView;
    this.btnBackToMap = btnBackToMap;
    this.recyclerFavoriteParks = recyclerFavoriteParks;
    this.tvFavoritesTitle = tvFavoritesTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFavoriteParksBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFavoriteParksBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_favorite_parks, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFavoriteParksBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_back_to_map;
      Button btnBackToMap = ViewBindings.findChildViewById(rootView, id);
      if (btnBackToMap == null) {
        break missingId;
      }

      id = R.id.recycler_favorite_parks;
      RecyclerView recyclerFavoriteParks = ViewBindings.findChildViewById(rootView, id);
      if (recyclerFavoriteParks == null) {
        break missingId;
      }

      id = R.id.tv_favorites_title;
      TextView tvFavoritesTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvFavoritesTitle == null) {
        break missingId;
      }

      return new FragmentFavoriteParksBinding((ConstraintLayout) rootView, btnBackToMap,
          recyclerFavoriteParks, tvFavoritesTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
