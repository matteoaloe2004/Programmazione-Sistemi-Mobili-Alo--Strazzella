// Generated by view binder compiler. Do not edit!
package com.trovaparco.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.trovaparco.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentParkDetailBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final Button btnBackToMap;

  @NonNull
  public final CardView cardInfo;

  @NonNull
  public final ImageView ivParkImage;

  @NonNull
  public final View overlay;

  @NonNull
  public final ConstraintLayout parkDetailRoot;

  @NonNull
  public final NestedScrollView scrollView;

  @NonNull
  public final TextView tvParkAddress;

  @NonNull
  public final TextView tvParkDistance;

  @NonNull
  public final TextView tvParkFacilities;

  @NonNull
  public final TextView tvParkName;

  @NonNull
  public final TextView tvParkOpeningHours;

  @NonNull
  public final TextView tvParkRating;

  private FragmentParkDetailBinding(@NonNull NestedScrollView rootView,
      @NonNull Button btnBackToMap, @NonNull CardView cardInfo, @NonNull ImageView ivParkImage,
      @NonNull View overlay, @NonNull ConstraintLayout parkDetailRoot,
      @NonNull NestedScrollView scrollView, @NonNull TextView tvParkAddress,
      @NonNull TextView tvParkDistance, @NonNull TextView tvParkFacilities,
      @NonNull TextView tvParkName, @NonNull TextView tvParkOpeningHours,
      @NonNull TextView tvParkRating) {
    this.rootView = rootView;
    this.btnBackToMap = btnBackToMap;
    this.cardInfo = cardInfo;
    this.ivParkImage = ivParkImage;
    this.overlay = overlay;
    this.parkDetailRoot = parkDetailRoot;
    this.scrollView = scrollView;
    this.tvParkAddress = tvParkAddress;
    this.tvParkDistance = tvParkDistance;
    this.tvParkFacilities = tvParkFacilities;
    this.tvParkName = tvParkName;
    this.tvParkOpeningHours = tvParkOpeningHours;
    this.tvParkRating = tvParkRating;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentParkDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentParkDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_park_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentParkDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_back_to_map;
      Button btnBackToMap = ViewBindings.findChildViewById(rootView, id);
      if (btnBackToMap == null) {
        break missingId;
      }

      id = R.id.card_info;
      CardView cardInfo = ViewBindings.findChildViewById(rootView, id);
      if (cardInfo == null) {
        break missingId;
      }

      id = R.id.iv_park_image;
      ImageView ivParkImage = ViewBindings.findChildViewById(rootView, id);
      if (ivParkImage == null) {
        break missingId;
      }

      id = R.id.overlay;
      View overlay = ViewBindings.findChildViewById(rootView, id);
      if (overlay == null) {
        break missingId;
      }

      id = R.id.park_detail_root;
      ConstraintLayout parkDetailRoot = ViewBindings.findChildViewById(rootView, id);
      if (parkDetailRoot == null) {
        break missingId;
      }

      NestedScrollView scrollView = (NestedScrollView) rootView;

      id = R.id.tv_park_address;
      TextView tvParkAddress = ViewBindings.findChildViewById(rootView, id);
      if (tvParkAddress == null) {
        break missingId;
      }

      id = R.id.tv_park_distance;
      TextView tvParkDistance = ViewBindings.findChildViewById(rootView, id);
      if (tvParkDistance == null) {
        break missingId;
      }

      id = R.id.tv_park_facilities;
      TextView tvParkFacilities = ViewBindings.findChildViewById(rootView, id);
      if (tvParkFacilities == null) {
        break missingId;
      }

      id = R.id.tv_park_name;
      TextView tvParkName = ViewBindings.findChildViewById(rootView, id);
      if (tvParkName == null) {
        break missingId;
      }

      id = R.id.tv_park_opening_hours;
      TextView tvParkOpeningHours = ViewBindings.findChildViewById(rootView, id);
      if (tvParkOpeningHours == null) {
        break missingId;
      }

      id = R.id.tv_park_rating;
      TextView tvParkRating = ViewBindings.findChildViewById(rootView, id);
      if (tvParkRating == null) {
        break missingId;
      }

      return new FragmentParkDetailBinding((NestedScrollView) rootView, btnBackToMap, cardInfo,
          ivParkImage, overlay, parkDetailRoot, scrollView, tvParkAddress, tvParkDistance,
          tvParkFacilities, tvParkName, tvParkOpeningHours, tvParkRating);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
